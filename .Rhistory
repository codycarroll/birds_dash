k_basis = create.fourier.basis(rangeval = range(t), nbasis = k)
smooth_y_basis = smooth.basis(argvals = t, y = y, fdParobj = k_basis)$fd
eval_y = eval.fd(t, smooth_y_basis)
eval_y = pmax(eval_y, 0.001) #prevent negatives
dens = eval_y/trapz(t, eval_y)
df[1,4:55] = dens
}
replace_data_w_smoothed = function(df){
#split
df_list = dlply(.data = df,
.variables = 'AVIBASEID',
.fun = function(x){return(x)})
#four_smooth
df_smoothed_list = lapply(df_list, four_smooth, k=8)
#replace raw data w smoothed
for(id in birdids){
df[df$AVIBASEID == id, 4:55] = t(df_smoothed_list[[id]])
}
return(df)
}
ebird19 = replace_data_w_smoothed(ebird19counts)
ebird22 = replace_data_w_smoothed(ebird22counts)
inat19 = replace_data_w_smoothed(inat19counts)
inat22 = replace_data_w_smoothed(inat22counts)
#function for long format
make_long = function(df){
dflong = df %>%
pivot_longer(!c(AVIBASEID, common, yr_db, total),
names_prefix = "Week-",
names_to = "week",
values_to = "count")
dflong$week = as.numeric(dflong$week)
#dflong$dataset = deparse(substitute(df))
return(dflong)
}
#function for plotting on the circular domain
ggcirc = function(i, circular = FALSE, scalefix = FALSE){
#base
gg_base = ggplot(allbirdslong %>%
filter(AVIBASEID %in% birdids[i]),
aes(x = week,
y = count,
group = yr_db,
color = yr_db)) +
geom_hline(yintercept=0, lwd = 1.25, color = "grey") +
geom_hline(yintercept=1/52, color = "grey", linetype="dashed", lwd = 1.25) +
ylab("frequency") +
annotate("rect",
xmin = 1,
xmax = 9,
ymin = 0,
ymax = Inf,
fill= "#B983FF",
alpha = 0.2) +
annotate("rect",
xmin = 9,
xmax = 9+13,
ymin = 0,
ymax = Inf,
fill= "#00BA38", alpha = 0.2) +
annotate("rect",
xmin = 22,
xmax = 35,
ymin = 0,
ymax = Inf,
fill= "#A3A500", alpha = 0.2) +
annotate("rect",
xmin = 35,
xmax = 48,
ymin = 0,
ymax = Inf,
fill= "#E58700", alpha = 0.2) +
annotate("rect",
xmin = 48,
xmax = 52,
ymin = 0,
ymax = Inf,
fill= "#B983FF", alpha = 0.2)
matchidx = match(birdids[i], bird_dict$AVIBASEID)
common = bird_dict$CommonName[matchidx]
#add bird curve plots
if(circular){
gg_onebird = gg_base +
geom_polygon(fill = NA, lwd = 1.1) +
ggtitle(common) +
theme(text=element_text(size=20),
aspect.ratio = 10/11) +
labs(color = "Database/Year") +
coord_polar()
}else{
if(scalefix){
gg_base = gg_base + ylim(c(0,.12))
}
gg_onebird = gg_base +
geom_line(lwd = 1.1) +
ggtitle(common) +
theme(text=element_text(size=20),
aspect.ratio = 10/11,
legend.position = "none") +
labs(color = "Database/Year") +
guides(group="none",
color = "none") +
coord_cartesian(expand = FALSE)
}
gg_onebird
}
library(arrow)
library(tidyverse)
library(magrittr)
library(ggpubr)
library(stringr)
library(rlang)
library(ggplot2); theme_set(theme_bw())
library(ggrepel)
library(googlesheets4)
library(dplyr)
library(plyr)
library(pracma)
library(tidyr)
library(kdensity)
library(circular)
library(fda)
source("~/Desktop/repos/birds_dash/0_birds_import_processing.R")
#summary of total counts
count_tbl = allcounts %>%
group_by(yr_db) %>%
summarise(total_obs = sum(total),
avg_yrly_counts_per_sp = round(mean(total),2))
count_tbl_wide = data.frame(platform = c("eBird", "iNaturalist"),
total_obs22 = count_tbl$total_obs[c(2,4)],
avg_yrly_counts_per_sp22 = count_tbl$avg_yrly_counts_per_sp[c(2,4)],
total_obs19 = count_tbl$total_obs[c(1,3)],
avg_yrly_counts_per_sp19 = count_tbl$avg_yrly_counts_per_sp[c(1,3)])
count_tbl_wide
allcountslong = allcounts %>% make_long()
counts22long = allcountslong %>%
filter(grepl("22$", yr_db))
source("~/Desktop/repos/birds_dash/0_birds_import_processing.R")
#summary of total counts
count_tbl = allcounts %>%
group_by(yr_db) %>%
summarise(total_obs = sum(total),
avg_yrly_counts_per_sp = round(mean(total),2))
count_tbl_wide = data.frame(platform = c("eBird", "iNaturalist"),
total_obs22 = count_tbl$total_obs[c(2,4)],
avg_yrly_counts_per_sp22 = count_tbl$avg_yrly_counts_per_sp[c(2,4)],
total_obs19 = count_tbl$total_obs[c(1,3)],
avg_yrly_counts_per_sp19 = count_tbl$avg_yrly_counts_per_sp[c(1,3)])
count_tbl_wide
source("~/Desktop/repos/birds_dash/0_birds_import_processing.R")
#summary of total counts
count_tbl = allcounts %>%
group_by(yr_db) %>%
summarise(total_obs = sum(total),
avg_yrly_counts_per_sp = round(mean(total),2))
count_tbl_wide = data.frame(platform = c("eBird", "iNaturalist"),
total_obs22 = count_tbl$total_obs[c(2,4)],
avg_yrly_counts_per_sp22 = count_tbl$avg_yrly_counts_per_sp[c(2,4)],
total_obs19 = count_tbl$total_obs[c(1,3)],
avg_yrly_counts_per_sp19 = count_tbl$avg_yrly_counts_per_sp[c(1,3)])
count_tbl_wide
#summary of total counts
count_tbl = allcounts %>%
group_by(yr_db) %>%
summarise(total_obs = sum(total),
avg_yrly_counts_per_sp = round(mean(total),2))
count_tbl
allcounts
allcounts$yr_db %>% unique
allcounts %>%
group_by(yr_db)
#summary of total counts
count_tbl = allcounts %>%
group_by(yr_db) %>%
dplyr::summarise(total_obs = sum(total),
avg_yrly_counts_per_sp = round(mean(total),2))
count_tbl
count_tbl_wide = data.frame(platform = c("eBird", "iNaturalist"),
total_obs22 = count_tbl$total_obs[c(2,4)],
avg_yrly_counts_per_sp22 = count_tbl$avg_yrly_counts_per_sp[c(2,4)],
total_obs19 = count_tbl$total_obs[c(1,3)],
avg_yrly_counts_per_sp19 = count_tbl$avg_yrly_counts_per_sp[c(1,3)])
count_tbl_wide
count_tbl
allcountslong = allcounts %>% make_long()
counts22long = allcountslong %>%
filter(grepl("22$", yr_db))
counts22long$yr_db %>% unique
counts19long = allcountslong %>%
filter(grepl("19$", yr_db))
counts22_byspec = counts22long %>%
dplyr::group_by(common, yr_db) %>%
dplyr::summarise(count = sum(count))
counts22_byspec_wide = counts22_byspec %>%
pivot_wider(names_from = yr_db, values_from = count) %>%
mutate(ratio_eb2in = round(ebird22/inat22,2))
counts19_byspec = counts19long %>%
dplyr::group_by(common, yr_db) %>%
dplyr::summarise(count = sum(count))
counts19_byspec_wide = counts19_byspec %>%
pivot_wider(names_from = yr_db, values_from = count) %>%
mutate(ratio_eb2in = round(ebird19/inat19,2))
#summary stats on ratios
summary(counts22_byspec_wide$ratio_eb2in)
sd(counts22_byspec_wide$ratio_eb2in)
mean(counts22_byspec_wide$ratio_eb2in > 1)
#summary stats on ratios
summary(counts19_byspec_wide$ratio_eb2in)
sd(counts19_byspec_wide$ratio_eb2in)
mean(counts19_byspec_wide$ratio_eb2in > 1)
counts_byspec_wide = cbind(counts22_byspec_wide,
counts19_byspec_wide[, -1])
colnames(counts_byspec_wide) = c("Bird Species",
"eBird obs. (2022)",
"iNat obs. (2022)",
"eBird/iNat ratio (2022)",
"eBird obs. (2019)",
"iNat obs. (2019)",
"eBird/iNat ratio (2019)")
sorted_counts_byspec_wide = counts_byspec_wide %>% arrange(desc(`eBird/iNat ratio (2022)`))
comp_tbl = rbind(sorted_counts_byspec_wide %>% head(4),
sorted_counts_byspec_wide %>% tail(6))
ratio_df = rbind(
counts22_byspec_wide %>%
dplyr::select(common, ratio_eb2in) %>%
dplyr::mutate(year = 2022) %>%
dplyr::rename(ratio = ratio_eb2in),
counts19_byspec_wide %>%
dplyr::select(common, ratio_eb2in) %>%
dplyr::mutate(year = 2019) %>%
dplyr::rename(ratio = ratio_eb2in))
ratio_df$year = ratio_df$year %>% as.factor()
group.colors = c(`2022` = "steelblue", `2019` = "coral3")
ggratio = ggplot(ratio_df,  aes(x = ratio, fill = year)) +
geom_histogram(binwidth = 20,
boundary = 0,
alpha = 0.5,
position = "identity",
color = "black") +
geom_vline(xintercept = 1, color = "red", linetype = "dashed") +
xlab("ratio of total observations (eBird to iNat)") +
ylab("# of species")  +
scale_fill_manual(values=group.colors) +
theme_bw(base_size = 16) +
theme(legend.position = c(.9,.9))
ggratio
gglogratio = ggplot(ratio_df,  aes(x = log(ratio), fill = year)) +
geom_histogram(alpha = 0.5,
position = "identity",
color = "black") +
geom_vline(xintercept = 0, color = "red", linetype = "dashed") +
xlab("log ratio of total observations (eBird to iNat)") +
ylab("# of species")  +
scale_fill_manual(values=group.colors) +
theme_bw(base_size = 16) +
theme(legend.position = c(.9,.9))
gglogratio
ggratio22 = ggplot(counts22_byspec_wide,
aes(x = ratio_eb2in)) +
geom_histogram(binwidth = 20,
boundary = 0,
color = "black",
fill = "steelblue") +
xlab("ratio of total observations (eBird to iNat)") +
ylab("# of species")
ggratio22
gglogratio22 = ggplot(counts22_byspec_wide,
aes(x = log(ratio_eb2in))) +
geom_histogram(color = "black",
fill = "steelblue") +
xlab("log ratio of total observations (eBird to iNat)") +
ylab("# of species")
gglogratio22
ggsave(plot = ggratio22,
filename =  "~/Desktop/repos/explorations_func_data/img/ratio_hist.png",
width = 5.5,
height = 3,
dpi = 300)
ggratio19 = ggplot(counts19_byspec_wide,
aes(x = ratio_eb2in)) +
geom_histogram(binwidth = 40,
boundary = 0,
color = "grey20",
fill = "steelblue") +
xlab("ratio of total observations (eBird to iNat)") +
ylab("# of species")
ggratio19
gglogratio19 = ggplot(counts19_byspec_wide,
aes(x = log(ratio_eb2in))) +
geom_histogram(color = "black",
fill = "steelblue") +
xlab("log ratio of total observations (eBird to iNat)") +
ylab("# of species")
gglogratio19
ggsave(plot = ggratio19,
filename =  "~/Desktop/repos/explorations_func_data/img/ratio_hist.png",
width = 5.5,
height = 3,
dpi = 300)
scatter22log = ggplot(counts22_byspec_wide,
aes(x = log10(ebird22),
y = log10(inat22))) +
geom_point() +
xlab("eBird checklists (log)") +
ylab("iNaturalist observations (log)") +
geom_text(data=data.frame(),
aes(label = '2022',
x = 2,
y = 3.5),
color = "red",
size = 7.5,
hjust = 1,
vjust = 1) +
theme_bw(base_size = 16)
scatter22log_label = scatter22log +
geom_text_repel(data = . %>%
mutate(label = ifelse(common %in% comp_tbl$`Bird Species`,
common, "")),
aes(label = label),
size = 4,
min.segment.length = unit(0, 'lines'),
box.padding = 0.25,
show.legend = FALSE,
max.overlaps = 50)
scatter22log_label
ggsave(plot = scatter22log,
filename =  "~/Desktop/repos/explorations_func_data/img/scatter22log.png",
width = 6,
height = 6,
dpi = 300)
#convert to long
ebird19long = make_long(ebird19)
ebird22long = make_long(ebird22)
inat19long = make_long(inat19)
inat22long = make_long(inat22)
#one df for all dbs
allbirdslong = rbind(ebird19long,
ebird22long,
inat19long,
inat22long)
gge22 = ggplot(ebird22long, #%>%
#filter(AVIBASEID %in% birdids[i]),
aes(x = week,
y = count,
group = common)) +
geom_line(alpha = 0.2) +
theme(legend.position = "none")
ggi22 = ggplot(inat22long, #%>%
#filter(AVIBASEID %in% birdids[i]),
aes(x = week,
y = count,
group = common)) +
geom_line(alpha = 0.2) +
theme(legend.position = "none")
ggarrange(gge22, ggi22)
knitr::opts_chunk$set(echo = TRUE)
sidebysideplot = function(id, scalefix = TRUE){
common = bird_dict$CommonName[match(id, bird_dict$AVIBASEID)]
flat = ggcirc(id, circular = FALSE, scalefix)
circ = ggcirc(id, circular = TRUE, scalefix)
gg = flat + circ + theme(plot.margin=grid::unit(c(0,0,0,0), "mm")) +
plot_layout(ncol = 2, nrow = 1, guides = "collect")
return(gg)
}
#Winter
w_idx = c(9, 21, 24, 25, 28, 37,
39, 43,  54, 56, 64, 71,
82, 84, 85, 86, 90, 99, 103,  123,
134,  138, 144,  154, 158, 159,
165, 170,  177, 181,  190, 194,
199, 201, 212, 218, 220, 223,
243, 244, 257, 259)
# for(i in w_idx){
#
#   matchidx = match(birdids[i], bird_dict$AVIBASEID)
#   common = bird_dict$CommonName[matchidx]
#
#   paste0("Bird: ", common, ". ") %>% print
#
#   paste0("ebird19 observation count: ", ebird19counts$total[ebird19counts$AVIBASEID == birdids[i]], ". ") %>% print
#   paste0("ebird22 observation count: ", ebird22counts$total[ebird22counts$AVIBASEID == birdids[i]], ". ") %>% print
#   paste0("inat19 observation count: ", inat19counts$total[inat19counts$AVIBASEID == birdids[i]], ". ") %>% print
#   paste0("inat22 observation count: ", inat22counts$total[inat22counts$AVIBASEID == birdids[i]], ". ") %>% print
#
#
#   print(sidebysideplot(i))
# }
#Bufflehead
win_rep_idx = which(birdids == bird_dict[bird_dict$CommonName == "Bufflehead",]$AVIBASEID)
ggwin = sidebysideplot(win_rep_idx)
win_rep_idx
ggwin = sidebysideplot(win_rep_idx)
#convert to long
ebird19long = make_long(ebird19)
ebird19long
ebird22long
ebird22long = make_long(ebird22)
inat19long = make_long(inat19)
inat22long = make_long(inat22)
library(arrow)
library(tidyverse)
library(magrittr)
library(ggpubr)
library(stringr)
library(rlang)
library(ggplot2); theme_set(theme_bw())
library(googlesheets4)
library(fdapace)
library(dplyr)
library(plyr)
library(pracma)
library(tidyr)
library(kdensity)
library(circular)
library(fda)
library(gridExtra)
rm(list = ls())
#raw counts data
ebird19counts = read_parquet("~/Desktop/repos/birds_dash/data/eb19_raw_counts_all.parquet")
ebird22counts = read_parquet("~/Desktop/repos/birds_dash/data/eb22_raw_counts_all.parquet")
inat19counts = read_parquet("~/Desktop/repos/birds_dash/data/in19_raw_counts_all.parquet")
inat22counts = read_parquet("~/Desktop/repos/birds_dash/data/in22_raw_counts_all.parquet")
birdids_df = read.csv("~/Desktop/repos/birds_dash/data/birdids.csv")
birdids = birdids_df$x
#dictionary & traits
bird_dict = read.csv("~/Desktop/repos/explorations_func_data/name_aviD_dict_22.csv")
trait_data = read.csv("~/Desktop/bird_data/ELEData/TraitData/AVONET1_BirdLife.csv")
#process trait data
#isolate avibaseID
split_list = str_split(trait_data$Avibase.ID1, "-")
avibaseID_list = lapply(split_list, function(x) x[2])
trait_data$AVIBASE = unlist(avibaseID_list)
#filter to 260 birds:
#(How do we decide these 260 birds? Write up.)
ebird19counts = ebird19counts %>% filter(AVIBASEID %in% birdids)
inat19counts = inat19counts %>% filter(AVIBASEID %in% birdids)
ebird22counts = ebird22counts %>% filter(AVIBASEID %in% birdids)
inat22counts = inat22counts %>% filter(AVIBASEID %in% birdids)
count_list = list(ebird19 = ebird19counts,
inat19 = inat19counts,
ebird22 = ebird22counts,
inat22 = inat22counts)
allcounts = bind_rows(count_list, .id = "yr_db")
ebird19counts = allcounts %>% filter(yr_db == "ebird19")
ebird22counts = allcounts %>% filter(yr_db == "ebird22")
inat19counts = allcounts %>% filter(yr_db == "inat19")
inat22counts = allcounts %>% filter(yr_db == "inat22")
counts_to_relative = function(df){
df_relative = df
for(i in 1:nrow(df)){
df_relative[i, 2:53] = df[i, 2:53]/sum(df[i, 2:53]) #divide row #s by total to get relative counts
}
return(df_relative)
#sanity check that they add to 1
#df_relative[,2:53] %>% rowSums()
}
ebird19rel = counts_to_relative(ebird19counts)
ebird22rel = counts_to_relative(ebird22counts)
inat19rel = counts_to_relative(inat19counts)
inat22rel = counts_to_relative(inat22counts)
write.csv(ebird19rel, "~/Desktop/repos/birds_dash/data/
ebird19rel_raw.csv")
write.csv(ebird22rel, "~/Desktop/repos/birds_dash/data/
ebird22rel_raw.csv")
write.csv(inat19rel, "~/Desktop/repos/birds_dash/data/
inat19rel_raw.csv")
write.csv(inat19rel, "~/Desktop/repos/birds_dash/data/
inat19rel_raw.csv")
write.csv(ebird19rel, "~/Desktop/repos/birds_dash/data/ebird19rel_raw.csv")
write.csv(ebird22rel, "~/Desktop/repos/birds_dash/data/ebird22rel_raw.csv")
write.csv(inat19rel, "~/Desktop/repos/birds_dash/data/inat19rel_raw.csv")
write.csv(inat19rel, "~/Desktop/repos/birds_dash/data/inat19rel_raw.csv")
write.csv(inat19rel, "~/Desktop/repos/birds_dash/data/inat19rel_raw.csv")
write.csv(inat19rel, "~/Desktop/repos/birds_dash/data/inat22rel_raw.csv")
four_smooth = function(df_relative, k = 3){
#establish time grid
t = 1:52
#curve data
database = df_relative[,1]
avibaseid = df_relative[,54]
y = unlist(t(df_relative[,2:53]))
wk_names = colnames(df_relative[,2:53])
#create a basis of dimension k
k_basis = create.fourier.basis(rangeval = range(t),
nbasis = k)
#smooth the curve data using the dimension of basis k
smooth_y_basis = smooth.basis(argvals = t,
y = y,
fdParobj = k_basis)$fd
eval_y = eval.fd(t, smooth_y_basis)
#prevent negatives
eval_y = pmax(eval_y, 0.001)
#renormalize
dens = eval_y
for(i in 1:ncol(eval_y)){
dens[,i] = eval_y[,i] / trapz(t, eval_y[,i])
}
dens = t(dens) # fix dim
colnames(dens) = wk_names
output = bind_cols(database, dens, avibaseid)
#output fourier smoothed normalized densities
return(output)
}
#smooth with 8-dim basis
ebird19rel_smoothed = four_smooth(df = ebird19rel, k = 8)
ebird22rel_smoothed = four_smooth(df = ebird22rel, k = 8)
inat19rel_smoothed = four_smooth(df = inat19rel, k = 8)
inat22rel_smoothed = four_smooth(df = inat22rel, k = 8)
write.csv(ebird19rel_smoothed, "~/Desktop/repos/birds_dash/data/ebird19rel_fsmoothed.csv")
write.csv(ebird22rel_smoothed, "~/Desktop/repos/birds_dash/data/ebird22rel_fsmoothed.csv")
write.csv(inat19rel_smoothed, "~/Desktop/repos/birds_dash/data/inat19rel_fsmoothed.csv")
write.csv(inat19rel_smoothed, "~/Desktop/repos/birds_dash/data/inat22rel_fsmoothed.csv")
